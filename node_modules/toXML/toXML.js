/**
 * Created by Phil on 2014-12-22.
 */


module.exports = {
    toXMLString: function(varPresentation){
        var sXML = parseVarPresentation(varPresentation);
        return sXML;
    }
};

function parseVarPresentation(varPresentation){
    var stringXML = '<presentation>';

    stringXML = stringXML + '<nomanimateur>' + remplaceChar(varPresentation.varNomAnimateur) + '</nomanimateur>';
    stringXML = stringXML + '<nomstation>' + remplaceChar(varPresentation.varNomStation) + '</nomstation>';
    stringXML = stringXML + '<capacite>' + remplaceChar(varPresentation.varCapacite) + '</capacite>';
    stringXML = stringXML + '<villes>' + remplaceChar(varPresentation.varVilles) + '</villes>';
    stringXML = stringXML + '<population>' + remplaceChar(varPresentation.varPopulation) + '</population>';
    stringXML = stringXML + '<provenance>' + remplaceChar(varPresentation.varProvenance) + '</provenance>';
    stringXML = stringXML + '<nomplandeau>' + remplaceChar(varPresentation.varNomPlanDEau) + '</nomplandeau>';

    stringXML = stringXML + '<particularites>';
    for(i=0; i<varPresentation.varParticularite.length; i++){
        stringXML = stringXML + '<particularite>' +remplaceChar( varPresentation.varParticularite[i]) + '</particularite>';
    }
    stringXML = stringXML + '</particularites>';

    stringXML = stringXML + '<procedes>';
    for(j=0; j<varPresentation.varProcedes.length; j++){
        stringXML = stringXML + '<procede><nom>' + remplaceChar(varPresentation.varProcedes[j].varItem) + '</nom>';
            for(k=0; k < varPresentation.varProcedes[j].varImg.length; k++){
                stringXML = stringXML + '<image>' + remplaceChar(varPresentation.varProcedes[j].varImg[k]) + '</image>';
            }
            for(l=0; l < varPresentation.varProcedes[j].varLink.length; l++){
                stringXML = stringXML + '<lien>' + remplaceChar(varPresentation.varProcedes[j].varLink[l]) + '</lien>';
            }
        stringXML = stringXML + '</procede>'

    }
    stringXML = stringXML + '</procedes>';

    stringXML = stringXML + '<maplinks>';
    for(p=0; p<varPresentation.varMapsLink.length; p++){
        stringXML = stringXML + '<maplink>' + remplaceChar(varPresentation.varMapsLink[p]) + '</maplink>';
    }
    stringXML = stringXML + '</maplinks>';

    stringXML = stringXML + '<ordrepresentation>';
    for(s=0; s<varPresentation.varOrdrePresentation.length; s++){
        stringXML = stringXML + '<fiche>' + remplaceChar(varPresentation.varOrdrePresentation[s]) + '</fiche>';
    }
    stringXML = stringXML + '</ordrepresentation>';

    stringXML = stringXML + '<nomimage>' + remplaceChar(varPresentation.varNomImage) + '</nomimage>';

    stringXML = stringXML + '<datecreation>' + remplaceChar(varPresentation.varDateCreation) + '</datecreation>';

    stringXML = stringXML + '<datemodif>' + remplaceChar(varPresentation.varDateModif) + '</datemodif>';

    stringXML = stringXML + '<dateacces>' + remplaceChar(varPresentation.varDateAcces) + '</dateacces>';

    stringXML = stringXML + '<etat>' + remplaceChar(varPresentation.varEtat) + '</etat>';

    stringXML = stringXML + '</presentation>';
    return stringXML;
};

function remplaceChar(chaine){
    var nouvelleChaine = '';
    for(var i = 0; i < chaine.length; i++){
        if(chaine[i] == '&'){
            nouvelleChaine += '&amp;'
        }else if(chaine[i] == '\''){
            nouvelleChaine += '&apos;'
        }else if(chaine[i] == '<'){
            nouvelleChaine += '&lt;'
        }else if(chaine[i] == '>'){
            nouvelleChaine += '&gt;'
        }else if(chaine[i] == '"'){
            nouvelleChaine += '&quot;'
        }else{
            nouvelleChaine += chaine[i];
        }
    }
    return nouvelleChaine;
}